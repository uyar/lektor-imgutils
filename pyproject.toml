[project]
name = "lektor-imgutils"
version = "0.2"
description = "Image handling utilities for Lektor."
readme = "README.rst"

authors = [{name = "H. Turgut Uyar", email = "uyar@tekir.org"}]
license = {file = "LICENSE.txt"}

keywords = ["lektor", "plugin", "image", "responsive", "srcset", "picture"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Plugins",
    "Framework :: Lektor",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Site Management",
]

requires-python = "~=3.8"
dependencies = ["lektor", "lxml", "cssselect", "pillow", "typedload"]

[project.optional-dependencies]
tests = ["pytest", "pytest-cov"]
style = ["ruff"]
types = ["mypy", "lxml-stubs"]
dev = [
    "lektor-imgutils[tests,types,style]",
    "build",
    "twine",
    "tox",
]

[project.entry-points."lektor.plugins"]
imgutils = "lektor_imgutils:ImgUtilsPlugin"

[project.urls]
repository = "https://github.com/uyar/lektor-imgutils"

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.coverage.run]
source = ["lektor_imgutils.py"]

[tool.coverage.report]
show_missing = true
skip_covered = true

[tool.mypy]
ignore_missing_imports = true

[tool.ruff]
line-length = 79

[tool.ruff.lint]
select = ["A", "E", "F", "I", "T", "W"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["E501"]

[tool.ruff.lint.isort]
lines-after-imports = 2

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py3{8,9,10,11,12}, style, types
isolated_build = True

[testenv]
extras = tests
package = wheel
wheel_build_env = .pkg
commands =
    pytest

[testenv:types]
extras = types
commands =
    mypy lektor_imgutils.py

[testenv:style]
skip_install = true
deps =
    ruff
commands =
    ruff check --preview lektor_imgutils.py

[testenv:package]
skip_install = true
deps =
    build
    twine
commands =
    python -c "import shutil; shutil.rmtree('dist', ignore_errors=True)"
    python -m build
    twine check dist/*
"""

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"
